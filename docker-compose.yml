
version: "3.8"
services:
  db:
    image: postgres:14
    container_name: contract-editor-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-contract_editor}
    ports:
      - ${DB_PORT:-5432}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-contract_editor}
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: contract-editor-backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PORT=5000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-contract_editor}
    ports:
      - 5000:5000
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: contract-editor-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - 80:80
    networks:
      - app-network
volumes:
  postgres_data: null
networks:
  app-network:
    driver: bridge
